@use "../abstracts/colormap" as *;
@use "../abstracts/fontmaps" as *;
@use "../abstracts/layout-scale" as *;
@use "../abstracts/mixins" as *;

:root {
  --color-text: #616161;
  --color-text-btn: var(--clr-light);
  --card1-gradient-color1: #f12711;
  --card1-gradient-color2: #f5af19;
  --card2-gradient-color1: #7f00ff;
  --card2-gradient-color2: #e100ff;
  --card3-gradient-color1: #3f2b96;
  --card3-gradient-color2: #a8c0ff;
  --card4-gradient-color1: #11998e;
  --card4-gradient-color2: #38ef7d;
  // color custom properties
  @each $color, $shades in $colormap {
    @each $shade, $value in $shades {
      @if $shade == "" {
        --clr-#{$color}: #{$value};
      } @else {
        --clr-#{$color}-#{$shade}: #{$value};
      }
    }
  }
  // font families
  --ff-expletus: #{$ff-expletus};
  --ff-inter: #{$ff-inter};
  --ff-league-gothic: #{$ff-league-gothic};
  // font custom properties
  @each $screensize, $font-size in $font-sizes {
    @if $screensize == mobile {
      /* font-size variables */
      @each $property, $value in $font-size {
        --fs-#{$property}: #{$value};
      }
      /* font-weight variables */
      @each $property, $value in $font-weight {
        --fw-#{$property}: #{$value};
      }
    } @else if $screensize == tablet {
      @include mediaquery(s) {
        @each $property, $value in $font-size {
          --fs-#{$property}: #{$value};
        }
      }
    } @else {
      @include mediaquery(l) {
        @each $property, $value in $font-size {
          --fs-#{$property}: #{$value};
        }
      }
    }
  }
}
